# FIXME: IFのネストでびっくりするくらい見辛くなる。DSLを作るべきかも?
# とりあえずVSCode用のシンタックスハイライトを作ってみよう

[Preference]
default_speak_interval = 0.01 # キャラクターが一文喋った後に待機する時間です


[Dictionary]
"ほげ" = [
    "イルカ",
    "クラゲ",
    "クジラ"
]
"ふが" = [
    "test1",
    "test2"
]


[Message]
OnFirstLoad = [
    [
        """
こんにちは!{my.name}です。私はこのデスクトップマスコットの案内役です。
現在のバージョンは{software.version}です。
まずは貴方の名前を教えて頂けますか?
{ask_user_name()}
{IF(user.name == "minimarimo3")}""",
        [
            ["...まだ完成しないんですか?{exit_desktop_mascot()}"],
            ["{user.name}さんですね!"]
        ],
        'synchronize("よろしくお願いします!", "よろしく...")',
        """{change_user()}それでは案内役からこのソフトウェアの紹介をさせていただきますね。
このソフトウェアはMarimoDesktopMascotという名前で、キャラクターをデバイスの中に住まわせることができます。詳細は{make_link("ソフトウェアのヘルプ", "https://github.com/minimarimo/MarimoDesktopMascot")}に書いてあります。
初期状態では何も役に立つことをしませんが、拡張機能を入れることで様々なことができるようになりますので好きなものを入れてみてください。
説明は以上です。最後に様子見目的で入れた方のためにテスト用リンクを列挙しておきます。
"""
    ]
]  # OnFirstLoad

OnLoad = [
    [
        "こんにちは!{my.name}です。今日もよろしくお願いします。"
    ]
]  # OnLoad

OnRandom = [
    [
        "ランダムメッセージですね!それではこれから二人で海の仲間を五種類上げていきます!",
        "えぇ!?私も?",
        "さあ行きますよ!まずは、{random_dictionary(\"海の生き物\")}",
        "{random_dictionary(\"海の生き物\")}?",
        "{random_dictionary(\"海の生き物\")}!",
        "...{random_dictionary(\"海の生き物\")}",
        "{random_dictionary(\"海の生き物\")}で終わりです!",
    ],
    [
        "～♪",
        "...ZZZ",
        "{IF(my.user_love_level < 0, my.user_love_level == 0, my.user_love_level < 30, my.user_love_level < 50)}",
        [
            # 愛情 < 0
            [
                "私のこと嫌いなんですか?別にいいですけど私はいつでもフォルダ全部消せるってこと覚えておいてくださいね。",
                "...(ピリピリしてる。逃げよう{my.hide()})",
            ],
            # 愛情 == 0
            [
                "うまく働けているでしょうか?不安です"
            ],
            # 愛情 < 30
            [
                "今日は何を食べたいですか?何でも作りますよ!",
                "ハンバーグ",
                "貴方じゃないです!"
            ],
            # 愛情 < 50
            [
                "みかんが食べたいです。あと猫飼いたい",
                [
                    """...猫
私も猫飼いたい"""
                ]
            ],
            # その他(今回は(50 <= 愛情)になる)
            [
                "...好きです",
                "{IF(my.user_love_level < 30)}",
                [
                    # 愛情 < 30
                    ["...{my.hide()}"],
                    # その他(今回は(30 <= 愛情)になる)
                    ["私も好き"]
                ]
            ]
        ]  # 愛情チェック終了
    ],
    # 上で分かるように、IFのネストが深くなると非常に見辛くなるので
    # Python書ける方はこのように実行してください。表示される結果は同じです
    # 関数名はシナリオで使用している言語を推奨します。
    ["{minimarimo3.愛情レベルに応じた振る舞い()}"]
]  # OnRandom
